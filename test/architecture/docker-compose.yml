version: '3'
services:
  pgorigin:
    image: splitgraphci/pgorigin
    environment:
      - ORIGIN_USER=originro
      - ORIGIN_PASS=originpass
      - ORIGIN_PG_DB=origindb
    expose:
      - 5432
    volumes:
      - ./data/pgorigin:/src
  mongoorigin:
    image: splitgraphci/mongoorigin
    ports:
      - '0.0.0.0:27017:27017'
    environment:
      - ORIGIN_USER=originro
      - ORIGIN_PASS=originpass
      - ORIGIN_MONGO_DB=origindb
    expose:
      - 27017
    volumes:
      - ./data/mongoorigin:/src
  mysqlorigin:
    image: mysql:8.0.13
    ports:
      - '0.0.0.0:3306:3306'
    environment:
      - MYSQL_DATABASE=mysqlschema
      - MYSQL_ROOT_PASSWORD=supersecure
      - MYSQL_USER=originuser
      - MYSQL_PASSWORD=originpass
    expose:
      - 3306
    volumes:
      - ./data/mysqlorigin/setup.sql:/docker-entrypoint-initdb.d/setup.sql:ro
  local_driver:
    image: splitgraph/driver
    ports:
      - '0.0.0.0:5432:5432'
    environment:
      - POSTGRES_USER=sgr
      - POSTGRES_PASSWORD=supersecure
      - POSTGRES_DB=splitgraph
    expose:
      - 5432
  remote_driver:
    build:
      context: ./src/
      dockerfile: remote_driver/Dockerfile
    ports:
      - '0.0.0.0:5431:5431'
    environment:
      - POSTGRES_USER=sgr
      - POSTGRES_PASSWORD=supersecure
      - POSTGRES_DB=splitgraph
      - PGPORT=5431
    volumes:
      - ./data/remote_driver/setup.sql:/docker-entrypoint-initdb.d/setup.sql
    expose:
      - 5431
  object_storage:
    image: minio/minio
    ports:
      - '0.0.0.0:9000:9000'
    environment:
      MINIO_ACCESS_KEY: minioclient
      MINIO_SECRET_KEY: supersecure
    # Run against a temporary throwaway space
    command: server /tmp
  remote_server:
    command: registry start-server
    image: splitgraphci/sgr
    build:
      dockerfile: ./test/architecture/src/sgr/Dockerfile
      context: ../../
    ports:
      - '0.0.0.0:11000:80'
    volumes:
      - ./data/remote_server/.sgconfig:/splitgraph/.sgconfig
      - ../../:/src
      - remote_server_venv:/venv
  ci_pgorigin:
    image: splitgraphci/pgorigin
    build: ./src/pgorigin
  ci_mongoorigin:
    image: splitgraphci/mongoorigin
    build: ./src/mongoorigin
volumes:
  remote_server_venv:
