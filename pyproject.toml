[tool.poetry]
name = "splitgraph"
version = "0.1.0"
description = "Command line library and Python client for Splitgraph, a version control system for data"
license = "Apache 2.0 modified with Commons Clause"
authors = ["Splitgraph Limited"]
readme = "README.md"
homepage = "https://www.splitgraph.com"
repository = "https://github.com/splitgraph/splitgraph"

[tool.poetry.dependencies]
python = "~=3.6"
click = "^7"
psycopg2-binary = "^2"
parsimonious = "^0.8"
minio = ">=4"
pglast = {version = ">=1.6", markers = 'sys_platform != "win32"'}
requests = ">=2.22"
docker = ">=4.0"
click_log = "^0.3.2"
tqdm = "^4.40.0"
packaging = "^20.1"
# Required for CSV ingestion and type inference
tableschema = "^1.15.0"
# Hack to avoid poetry lock downloading every single botocore version forever
# https://github.com/python-poetry/poetry/issues/1116 -- pin botocore to something recent.
# This is pulled in by tableschema (it pulls in tabulator which supports
# data export to S3). It's kind of sad that there's no way to turn this into an extra,
# but it (and a bunch of other S3 deps) doesn't seem to inflate the final `sgr`
# executable size by much.
botocore = "==1.15.33"

# Extra requirements for Pandas ingestion
pandas = {version = ">=0.24", extras = ["ingestion"], optional = true }
sqlalchemy = { version = "^1.3", extras = ["ingestion"], optional = true }


[tool.poetry.dev-dependencies]
pytest = ">=4.4"
pyfakefs = "^3.6"
pytest-cov = "^2.8"
pytest-env = "^0.6"
coveralls = "^1.7"
pyinstaller = "^3.4"
sphinx = "^2.0"
sphinx_rtd_theme = "^0.4.2"
pylint = "^2.4"
black = { version = "*", allow-prereleases = true }
pre-commit = "^1.18"
httpretty = "^1.0.2"
mypy = ">=0.720"
bump2version = "^1.0.0"

[tool.poetry.extras]
pandas = ["pandas", "sqlalchemy"]

[tool.poetry.scripts]
sgr = "splitgraph.commandline:cli"

[tool.black]
line-length = 100
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''
[build-system]
requires = ["poetry==1.0.5"]
build-backend = "poetry.masonry.api"

