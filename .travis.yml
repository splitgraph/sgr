language: python
install: true
sudo: required
python:
  - "3.6"
install:
  - python setup.py develop
script:
  - pytest

services:
  - docker

addons:
  hosts:
    # We need both the host and the local driver to be able to refer to the remote driver
    # using the same connection string, hence we map remote_driver on the host to localhost
    # (Docker networking takes care of wiring it up in the case of the container)
    - remote_driver

env:
  COMPOSE_VERSION: 1.21.2

before_install:
  - curl -L https://github.com/docker/compose/releases/download/${COMPOSE_VERSION}/docker-compose-`uname -s`-`uname -m` > docker-compose
  - chmod +x docker-compose
  - sudo mv docker-compose /usr/local/bin
  # Load cached docker images -- thanks https://github.com/travis-ci/travis-ci/issues/5358#issuecomment-248915326
  - if [[ -d $HOME/docker ]]; then ls $HOME/docker/*.tar.gz | xargs -I {file} sh -c "zcat {file} | docker load"; fi

before_script:
  # Stop the PG that ships with Travis and run our own integration test
  # SG driver/remote architecture instead.
  - sudo /etc/init.d/postgresql stop
  - sudo docker-compose --file test/architecture/docker-compose.yml up -d pgorigin mongoorigin local_driver remote_driver
  - ./wait-for-test-architecture.sh

after_success:
  - coveralls

# Define a cache for the driver/origin Docker images
cache:
  bundler: true
  directories:
    - $HOME/docker

before_cache:
  # Save tagged docker images
  - >
    mkdir -p $HOME/docker && docker images -a --filter='dangling=false' --format '{{.Repository}}:{{.Tag}} {{.ID}}'
    | xargs -n 2 -t sh -c 'test -e $HOME/docker/$1.tar.gz || docker save $0 | gzip -2 > $HOME/docker/$1.tar.gz'

